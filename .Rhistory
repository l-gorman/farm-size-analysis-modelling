final_summary <- short_summary %>% pivot_longer(cols = Estimate:Tail_ESS) %>%
pivot_wider(names_from = "country",values_from = "value")
final_summary
short_summary
overall_summary
final_summary
unique(final_summary$name)
final_summary <- short_summary %>% pivot_longer(cols = Estimate:Tail_ESS) %>%
pivot_wider(names_from = "country",values_from = "value")
final_summary$param_type <- NULL
final_summary$param <- NULL
final_summary$level <- NULL
final_summary <- final_summary %>%
rename(Parameter=param_clean) %>%
rename(Value=name) %>%
rename("All Countries"=all_countries) %>%
filter(name %in% c("Rhat", "Bulk_ESS", "Tail_ESS")==F)
final_summary <- final_summary %>%
rename(Parameter=param_clean) %>%
rename(Value=name) %>%
rename("All Countries"=all_countries) %>%
filter(Value %in% c("Rhat", "Bulk_ESS", "Tail_ESS")==F)
final_summary
final_summary
final_summary
final_summary$Parameter
final_summary$Parameter <- factor(final_summary$Parameter,levels = c("Between Country",
"Between Subcounty",
"Between Villages",
"Unexplained",
"Intercept"),ordered = T)
final_summary$Parameter
final_summary$Value
final_summary$Value <- factor(final_summary$Value,levels = c("Estimate",
"Est.Error",
"l-95% CI",
"u-95% CI"),ordered = T)
order(final_summary$Parameter,final_summary$Value)
View(final_summary)
final_summary <- short_summary %>% pivot_longer(cols = Estimate:Tail_ESS) %>%
pivot_wider(names_from = "country",values_from = "value")
final_summary$param_type <- NULL
final_summary$param <- NULL
final_summary$level <- NULL
final_summary <- final_summary %>%
rename(Parameter=param_clean) %>%
rename(Value=name) %>%
rename("All Countries"=all_countries) %>%
filter(Value %in% c("Rhat", "Bulk_ESS", "Tail_ESS")==F)
final_summary$Parameter <- factor(final_summary$Parameter,levels = c("Between Country",
"Between Subcounty",
"Between Villages",
"Unexplained",
"Intercept"),ordered = T)
final_summary$Value <- factor(final_summary$Value,levels = c("Estimate",
"Est.Error",
"l-95% CI",
"u-95% CI"),ordered = T)
View(final_summary)
short_summary
short_summary <- overall_summary
short_summary$param_clean <- NA
short_summary$param_clean[short_summary$param=="Intercept"] <- "Intercept"
short_summary$param_clean[short_summary$param=="Sigma"] <- "Unexplained"
short_summary$param_clean[short_summary$level%in%c("iso_country_code")] <- "Between Country"
short_summary$param_clean[short_summary$level%in%c("iso_country_code:gdlcode","gdlcode")] <- "Between Subcounty"
short_summary$param_clean[short_summary$level%in%c("iso_country_code:gdlcode:village","gdlcode:village")] <- "Between Villages"
short_summary$param_type <- NULL
short_summary$param <- NULL
short_summary$level <- NULL
final_summary <- short_summary %>% pivot_longer(cols = Estimate:Tail_ESS) %>%
pivot_wider(names_from = "country",values_from = "value")
final_summary <- final_summary %>%
rename(Parameter=param_clean) %>%
rename(Value=name) %>%
rename("All Countries"=all_countries) %>%
filter(Value %in% c("Rhat", "Bulk_ESS", "Tail_ESS")==F)
final_summary$Parameter <- factor(final_summary$Parameter,levels = c("Between Country",
"Between Subcounty",
"Between Villages",
"Unexplained",
"Intercept"),ordered = T)
final_summary$Value <- factor(final_summary$Value,levels = c("Estimate",
"Est.Error",
"l-95% CI",
"u-95% CI"),ordered = T)
View(final_summary)
order(final_summary$Parameter,final_summary$Value)
final_summary <- final_summary[order(final_summary$Parameter,final_summary$Value),]
readr::write_csv(final_summary, "./outputs/vpc_plots/gdl/summary/model_comparison_table_clean.csv")
final_summary
final_summary %>% relocate("All Countries", .after="ZM")
readr::write_csv(final_summary, "./outputs/vpc_plots/gdl/summary/model_comparison_table_clean.csv")
final_summary <- final_summary %>% relocate("All Countries", .after="ZM")
readr::write_csv(final_summary, "./outputs/vpc_plots/gdl/summary/model_comparison_table_clean.csv")
plot_vpc
temp <- plot_vpc(model =model,
params =  c( "sd_iso_country_code__Intercept",
"sd_iso_country_code:gdlcode__Intercept",
"sd_iso_country_code:gdlcode:village__Intercept",
"sigma"),
readable_params = c("Between Country", "Between Subcounty", "Between Village", "Unexplained"),
title = "VPCs for Farm Size All Data")
model <- loadRData( "./outputs/21_03_2023/iso_country_code_gdlcode_village.rda")
get_variables(model)[1:10]
temp <- plot_vpc(model =model,
params =  c( "sd_iso_country_code__Intercept",
"sd_iso_country_code:gdlcode__Intercept",
"sd_iso_country_code:gdlcode:village__Intercept",
"sigma"),
readable_params = c("Between Country", "Between Subcounty", "Between Village", "Unexplained"),
title = "VPCs for Farm Size All Data")
dir.create("outputs/vpc_plots/gdl/all_data")
ggsave( "outputs/vpc_plots/gdl/all_data/vpc_plot.png",temp)
indicator_data <- readr::read_csv("./prepared-data/rhomis-gaez-gdl.csv")
indicator_data <- indicator_data[!is.na(indicator_data$x_gps_latitude) & !is.na(indicator_data$x_gps_longitude),]
indicator_data <- indicator_data[!is.na(indicator_data$hfias_status),]
indicator_data <- indicator_data[!is.na(indicator_data$village),]
indicator_data <- readr::read_csv("./prepared-data/rhomis-gaez-gdl.csv")
indicator_data <- indicator_data[!is.na(indicator_data$x_gps_latitude) & !is.na(indicator_data$x_gps_longitude),]
quantile(indicator_data$land_cultivated_ha)
indicator_data <- indicator_data[!is.na(indicator_data$land_cultivated_ha),]
indicator_data <- readr::read_csv("./prepared-data/rhomis-gaez-gdl.csv")
indicator_data <- indicator_data[!is.na(indicator_data$x_gps_latitude) & !is.na(indicator_data$x_gps_longitude),]
indicator_data <- indicator_data[!is.na(indicator_data$village),]
indicator_data <- indicator_data[indicator_data$land_cultivated_ha>0,]
indicator_data <- indicator_data[indicator_data$land_cultivated_ha<100,]
indicator_data <- indicator_data[!is.na(indicator_data$land_cultivated_ha),]
#' Exploring and Analysing Farm-Size Dsitributions
# -------------------------------------------------------------------------------------------------------------
# Loading Libraries -------------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------------------------------
# Data Cleaning and reformatting
library(readr)
library(dplyr)
library(tibble)
library(tidyr)
library(ggplot2)
library(ggExtra)
library(RColorBrewer)
library(GGally)
dir.create("outputs/geographical_counts",showWarnings = F)
#-------------------------------------------------------------------------
#-------------------------------------------------------------------------
# Area Counts ------------------------------------------------------------
#-------------------------------------------------------------------------
#-------------------------------------------------------------------------
per_country_summary <- indicator_data %>%
group_by(iso_country_code) %>% summarise(
subnational_areas = n_distinct(gdlcode),
villages = n_distinct(village),
households = n()
)
new_row <- colSums(per_country_summary[c("subnational_areas","villages","households")]) %>% as.list()
new_row$iso_country_code <- "Total"
new_row <- tibble::as_tibble(new_row)
per_country_summary <- per_country_summary %>% bind_rows(new_row)
readr::write_csv(per_country_summary,"outputs/geographical_counts/per_country_summary.csv")
# Areas_per_country -------------------------------------------------------
per_country_summary_plot_df <- per_country_summary[per_country_summary$iso_country_code!="Total",]
per_country_summary_plot_df <- pivot_longer(per_country_summary, cols = c("subnational_areas",
"villages",
"households"))
temp <- ggplot(per_country_summary[per_country_summary$iso_country_code!="Total",],
aes(x=iso_country_code,y=subnational_areas))+
geom_bar(stat = "identity", fill="dodgerblue4", colour="black")+
labs(title="Total Number of Subnational Areas in per Country",x="Country", y="Subnational Areas")
ggsave("outputs/geographical_counts/subnation_areas_per_country.png",temp)
temp <- ggplot(per_country_summary[per_country_summary$iso_country_code!="Total",],
aes(x=iso_country_code,y=villages))+
geom_bar(stat = "identity", fill="dodgerblue4", colour="black")+
labs(title="Total Number of Villages  per Country",x="Country", y="Number of Villages")
ggsave("outputs/geographical_counts/villages_per_country.png",temp)
temp <- ggplot(per_country_summary[per_country_summary$iso_country_code!="Total",],
aes(x=iso_country_code,y=households))+
geom_bar(stat = "identity", fill="dodgerblue4", colour="black")+
labs(title="Total Number of Surveys per Country",x="Country", y="Number of Surveys")
ggsave("outputs/geographical_counts/surveys_per_country.png",temp)
# Villages_per_area -------------------------------------------------------
villages_per_area <- indicator_data %>%
group_by(iso_country_code,gdlcode) %>% summarise(count = n_distinct(village))
temp <- ggplot(villages_per_area,
aes(x=iso_country_code,y=count))+
geom_boxplot(fill="dodgerblue4", colour="black", outlier.shape = NA)+
scale_y_continuous(limits = quantile(villages_per_area$count, c(0, 0.99)))+
labs(title="Villages Per Subnational Area",x="Country", y="Number of Villages in Subnational Area")
ggsave("outputs/geographical_counts/villages_per_subnational_region.png",temp)
#-------------------------------------------------------------------------
indicator_data$village[indicator_data$iso_country_code=="NG"]
villages_per_area <- indicator_data %>%
group_by(iso_country_code,gdlcode) %>% summarise(count = n_distinct(village))
ggplot(villages_per_area,
aes(x=iso_country_code,y=count))+
geom_boxplot(fill="dodgerblue4", colour="black", outlier.shape = NA)+
scale_y_continuous(limits = quantile(villages_per_area$count, c(0, 0.99)))+
labs(title="Villages Per Subnational Area",x="Country", y="Number of Villages in Subnational Area")
ggsave("outputs/geographical_counts/villages_per_subnational_region.png",temp)
nrow(indicator_data)
indicator_data <- readr::read_csv("./data/prepped-data/rhomis-gaez-gdl.csv")
indicator_data <- indicator_data[!is.na(indicator_data$x_gps_latitude) & !is.na(indicator_data$x_gps_longitude),]
indicator_data <- indicator_data[!is.na(indicator_data$village),]
indicator_data <- indicator_data[indicator_data$land_cultivated_ha>0,]
indicator_data <- indicator_data[indicator_data$land_cultivated_ha<100,]
indicator_data <- indicator_data[!is.na(indicator_data$land_cultivated_ha),]
dir.create("outputs/geographical_counts",showWarnings = F)
#-------------------------------------------------------------------------
#-------------------------------------------------------------------------
# Area Counts ------------------------------------------------------------
#-------------------------------------------------------------------------
#-------------------------------------------------------------------------
per_country_summary <- indicator_data %>%
group_by(iso_country_code) %>% summarise(
subnational_areas = n_distinct(gdlcode),
villages = n_distinct(village),
households = n()
)
new_row <- colSums(per_country_summary[c("subnational_areas","villages","households")]) %>% as.list()
new_row$iso_country_code <- "Total"
new_row <- tibble::as_tibble(new_row)
per_country_summary <- per_country_summary %>% bind_rows(new_row)
readr::write_csv(per_country_summary,"outputs/geographical_counts/per_country_summary.csv")
# Areas_per_country -------------------------------------------------------
per_country_summary_plot_df <- per_country_summary[per_country_summary$iso_country_code!="Total",]
per_country_summary_plot_df <- pivot_longer(per_country_summary, cols = c("subnational_areas",
"villages",
"households"))
temp <- ggplot(per_country_summary[per_country_summary$iso_country_code!="Total",],
aes(x=iso_country_code,y=subnational_areas))+
geom_bar(stat = "identity", fill="dodgerblue4", colour="black")+
labs(title="Total Number of Subnational Areas in per Country",x="Country", y="Subnational Areas")
ggsave("outputs/geographical_counts/subnation_areas_per_country.png",temp)
temp <- ggplot(per_country_summary[per_country_summary$iso_country_code!="Total",],
aes(x=iso_country_code,y=villages))+
geom_bar(stat = "identity", fill="dodgerblue4", colour="black")+
labs(title="Total Number of Villages  per Country",x="Country", y="Number of Villages")
ggsave("outputs/geographical_counts/villages_per_country.png",temp)
temp <- ggplot(per_country_summary[per_country_summary$iso_country_code!="Total",],
aes(x=iso_country_code,y=households))+
geom_bar(stat = "identity", fill="dodgerblue4", colour="black")+
labs(title="Total Number of Surveys per Country",x="Country", y="Number of Surveys")
ggsave("outputs/geographical_counts/surveys_per_country.png",temp)
# Villages_per_area -------------------------------------------------------
villages_per_area <- indicator_data %>%
group_by(iso_country_code,gdlcode) %>% summarise(count = n_distinct(village))
temp <- ggplot(villages_per_area,
aes(x=iso_country_code,y=count))+
geom_boxplot(fill="dodgerblue4", colour="black", outlier.shape = NA)+
scale_y_continuous(limits = quantile(villages_per_area$count, c(0, 0.99)))+
labs(title="Villages Per Subnational Area",x="Country", y="Number of Villages in Subnational Area")
ggsave("outputs/geographical_counts/villages_per_subnational_region.png",temp)
#-------------------------------------------------------------------------
indicator_data$village[indicator_data$iso_country_code=="NG"]
villages_per_area <- indicator_data %>%
group_by(iso_country_code,gdlcode) %>% summarise(count = n_distinct(village))
ggplot(villages_per_area,
aes(x=iso_country_code,y=count))+
geom_boxplot(fill="dodgerblue4", colour="black", outlier.shape = NA)+
scale_y_continuous(limits = quantile(villages_per_area$count, c(0, 0.99)))+
labs(title="Villages Per Subnational Area",x="Country", y="Number of Villages in Subnational Area")
ggsave("outputs/geographical_counts/villages_per_subnational_region.png",temp)
#-------------------------------------------------------------------------
#-------------------------------------------------------------------------
#-------------------------------------------------------------------------
# people_per_county -------------------------------------------------------
opt <- list(
iter=20,
warmup=10,
data="./data/",
output="./outputs/continental_gaussian_location_test/",
ncores=4
)
library(brms)
library(ggplot2)
library(ggridges)
library(dplyr)
library(tidyr)
library(ggdist)
library(magrittr)
library(optparse)
opt$data <- gsub("/$", "", opt$data)
opt$output <- gsub("/$", "", opt$output)
dir.create(opt$output)
writeLines("test_file_output",paste0(opt$output,"/test_file.txt"))
run_model <- function(data,levels, quantile=NULL, sigma, iter, warmup,ncores ){
levels_args <- paste0(levels,collapse="/")
temp_formula <- paste0("log(land_cultivated_ha) ~ 1 + (1|",levels_args,")")
if (sigma==F & is.null(quantile)){
final_formula <- bf(temp_formula)
family <- gaussian()
}
if (sigma==T & is.null(quantile)){
sigma_formula <- paste0("sigma ~ 1 + (1|",levels_args,")")
final_formula <- bf(temp_formula, sigma_formula)
family <- gaussian()
}
if (!is.null(quantile)){
if (quantile>0 & quantile < 1 & sigma==F){
final_formula <- bf(temp_formula, quantile=quantile)
family <- asym_laplace()
}
}
if (!is.null(quantile)){
if (quantile>0 & quantile < 1 & sigma==T){
sigma_formula <- paste0("sigma ~ 1 + (1|",levels_args,")")
final_formula <- bf(temp_formula, sigma_formula,quantile=quantile)
family <- asym_laplace()
}
}
result <- brms::brm(
formula=final_formula,
data = data,
family=family,
cores = ncores,
warmup = warmup,
iter=iter,
control = list(adapt_delta = 0.95)
)
return(result)
}
# indicator_data <- readr::read_csv(paste0(opt$data,"/prepped-data/rhomis-ee-gaez.csv"))
indicator_data <- readr::read_csv(paste0(opt$data,"/prepped-data/rhomis-gaez-gdl.csv"))
nrow(indicator_data)
source("~/research/phd/farm-size-modelling-final/farm-size-analysis-ssa/src/exploratory-analysis/geographic_tallies.R")
source("~/research/phd/farm-size-modelling-final/farm-size-analysis-ssa/src/evaluation/vpc_plots.R")
source("~/research/phd/farm-size-modelling-final/farm-size-analysis-ssa/src/evaluation/vpc_plots.R")
readable_params
source("~/research/phd/farm-size-modelling-final/farm-size-analysis-ssa/src/evaluation/vpc_plots.R")
source("~/research/phd/farm-size-modelling-final/farm-size-analysis-ssa/src/evaluation/vpc_plots.R")
source("~/research/phd/farm-size-modelling-final/farm-size-analysis-ssa/src/evaluation/vpc_plots.R")
vpc_summary
final_summary
final_summary %>% gather(cols=!Value)
?pivot_longer
final_summary %>% pivot_longer(
cols = BF:`All Countries`
)
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% ggplot(aes(x=value,y=name))+
geom_point()+
facet_wrap(name)
final_summary %>% pivot_longer(
cols = BF:`All Countries`
)
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% ggplot(aes(x=value,y=name))+
geom_point()+
facet_wrap(~Parameter)
final_summary
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% ggplot(aes(x=value,y=name))+
geom_point()+
facet_wrap(~Parameter)
final_summary %>% pivot_longer(
cols = BF:`All Countries`
)
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(Value)
final_summary %>% pivot_longer(
cols = BF:`All Countries`
)
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")%>%
ggplot(aes(x=Estimate,y=name))+
geom_point()+
facet_wrap(~Parameter)
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")%>%
ggplot(aes(x=Estimate,y=name))+
geom_point()+
geom_hline(aes(x=.data[["l-95% CI"]],xend=.data[["u-95% CI"]],y=name,yend=name))
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")%>%
ggplot(aes(x=Estimate,y=name))+
geom_point()+
geom_hline(aes(x=.data[["l-95% CI"]],xend=.data[["u-95% CI"]],yintercept=name))
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")%>%
ggplot(aes(x=Estimate,y=name))+
geom_point()+
geom_segment(aes(x=.data[["l-95% CI"]],xend=.data[["u-95% CI"]],y=name,yend=name))
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")%>%
ggplot(aes(x=Estimate,y=name))+
geom_point()+
geom_segment(aes(x=.data[["l-95% CI"]],xend=.data[["u-95% CI"]],y=name,yend=name))+
facet_wrap(~Parameter)
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")%>%
ggplot(aes(x=Estimate,y=name))
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")%>%
ggplot(aes(x=Estimate,y=name))+
geom_point()+
geom_segment(aes(x=.data[["l-95% CI"]],xend=.data[["u-95% CI"]],y=name,yend=name))+
facet_wrap(~Parameter)
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")%>%
filter(name!="All Countries") %>%
ggplot(aes(x=Estimate,y=name))+
geom_point()+
geom_segment(aes(x=.data[["l-95% CI"]],xend=.data[["u-95% CI"]],y=name,yend=name))+
facet_wrap(~Parameter)
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")%>%
filter(name!="All Countries")
final_summary %>% pivot_longer(
cols = BF:`All Countries`
) %>% pivot_wider(id_cols = c("Parameter","name"),names_from = "Value",values_from = "value")%>%
filter(name!="All Countries" & Parameter!="Between Country") %>%
ggplot(aes(x=Estimate,y=name))+
geom_point()+
geom_segment(aes(x=.data[["l-95% CI"]],xend=.data[["u-95% CI"]],y=name,yend=name))+
facet_wrap(~Parameter)
#' Exploring and Analysing Farm-Size Dsitributions
# -------------------------------------------------------------------------------------------------------------
# Loading Libraries -------------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------------------------------
# Data Cleaning and reformatting
library(readr)
library(dplyr)
library(tibble)
library(projpred)
library(brms)
library(ggplot2)
library(ggridges)
library(dplyr)
library(tidyr)
library(ggdist)
library(magrittr)
library(optparse)
opt_parser = OptionParser(option_list=option_list);
opt = parse_args(opt_parser);
opt <- list(
iter=20,
warmup=10,
data="./data/",
output="./outputs/projpred_test/",
ncores=4
)
opt$data <- gsub("/$", "", opt$data)
opt$output <- gsub("/$", "", opt$output)
dir.create(opt$output)
writeLines("test_file_output",paste0(opt$output,"/test_file.txt"))
indicator_data <- readr::read_csv(paste0(opt$data,"/prepped-data/rhomis-gaez-gdl.csv"))
indicator_data <- indicator_data[!is.na(indicator_data$x_gps_latitude) & !is.na(indicator_data$x_gps_longitude),]
indicator_data <- indicator_data[!is.na(indicator_data$land_cultivated_ha),]
indicator_data <- indicator_data[indicator_data$land_cultivated_ha>0,]
indicator_data <- indicator_data[indicator_data$land_cultivated_ha<100,]
indicator_data <- indicator_data[!is.na(indicator_data$village),]
x_vars <- c(
#Household Level,
# "livestock_tlu",
# "hh_size_mae",
# Village Level
"adjusted_length_growing_period",
"AEZ_Classes_33_cold_no_permafrost_moist",
"AEZ_Classes_33_cold_no_permafrost_wet",
"AEZ_Classes_33_desert_or_arid_climate",
"AEZ_Classes_33_dominantly_built_up_land",
"AEZ_Classes_33_dominantly_hydromorphic_soils",
"AEZ_Classes_33_dominantly_very_steep_terrain",
"AEZ_Classes_33_dominantly_water",
"AEZ_Classes_33_land_with_ample_irrigated_soils",
"AEZ_Classes_33_land_with_severe_soil_or_terrain_limitations",
"AEZ_Classes_33_sub_tropics_cool_semi_arid",
"AEZ_Classes_33_sub_tropics_moderately_cool_semi_arid",
"AEZ_Classes_33_sub_tropics_moderately_cool_sub_humid",
"AEZ_Classes_33_sub_tropics_warm_humid",
"AEZ_Classes_33_sub_tropics_warm_semi_arid",
"AEZ_Classes_33_temperate_cool_wet",
"AEZ_Classes_33_tropics_highland_humid",
"AEZ_Classes_33_tropics_highland_semi_arid",
"AEZ_Classes_33_tropics_highland_sub_humid",
"AEZ_Classes_33_tropics_lowland_humid",
"AEZ_Classes_33_tropics_lowland_semi_arid",
"AEZ_Classes_33_tropics_lowland_sub_humid",
#Subcounty Level
"gdl_healthindex",
"gdl_sgdi",
"gdl_shdi",
"gdl_lifexp"
)
aez_cols <- grep("AEZ", colnames(indicator_data))
aez_cols <- grep("AEZ", colnames(indicator_data),value=T)
aez_cols
AEZ_Classes_33 <- AEZ_Classes_33[AEZ_Classes_33!="AEZ_Classes_33"]
aez_cols <- aez_cols[aez_cols!="AEZ_Classes_33"]
aez_cols
colSums(indicator_data[aez_cols]==0)
colSums(indicator_data[aez_cols]!=0)
